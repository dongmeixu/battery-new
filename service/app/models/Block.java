/*
 * 区块链服务API
 * 区块链服务
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package models;

import models.api.Jsonable;
import play.data.validation.Required;


import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Block
 */
public class Block implements Jsonable{
  @Required
  private String blockId = null;

  @Required
  private String version = "1";

  @Required
  private List<Transcation> transactions = new ArrayList<Transcation>();

  @Required
  private Timestamp timestamp = Timestamp.now();

  @Required
  private String transactionsHash = null;

  @Required
  private String stateHash = null;

  @Required
  private String previousBlockHash = null;

  public Block blockId(String blockId) {
    this.blockId = blockId;
    return this;
  }

   /**
   * block id
   * @return blockId
  **/

  public String getBlockId() {
    return blockId;
  }

  public void setBlockId(String blockId) {
    this.blockId = blockId;
  }

  public Block version(String version) {
    this.version = version;
    return this;
  }

   /**
   * block version
   * @return version
  **/

  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public Block transactions(List<Transcation> transactions) {
    this.transactions = transactions;
    return this;
  }

  public Block addTransactionsItem(Transcation transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * transcations of block
   * @return transactions
  **/

  public List<Transcation> getTransactions() {
    return transactions;
  }

  public void setTransactions(List<Transcation> transactions) {
    this.transactions = transactions;
  }

  public Block timestamp(Timestamp timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/

  public Timestamp getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Timestamp timestamp) {
    this.timestamp = timestamp;
  }

  public Block transactionsHash(String transactionsHash) {
    this.transactionsHash = transactionsHash;
    return this;
  }

   /**
   * The merkle root hash of the block’s transactions.
   * @return transactionsHash
  **/

  public String getTransactionsHash() {
    return transactionsHash;
  }

  public void setTransactionsHash(String transactionsHash) {
    this.transactionsHash = transactionsHash;
  }

  public Block stateHash(String stateHash) {
    this.stateHash = stateHash;
    return this;
  }

   /**
   * The merkle root hash of the world state.
   * @return stateHash
  **/

  public String getStateHash() {
    return stateHash;
  }

  public void setStateHash(String stateHash) {
    this.stateHash = stateHash;
  }

  public Block previousBlockHash(String previousBlockHash) {
    this.previousBlockHash = previousBlockHash;
    return this;
  }

   /**
   * 前一个块的Hash
   * @return previousBlockHash
  **/

  public String getPreviousBlockHash() {
    return previousBlockHash;
  }

  public void setPreviousBlockHash(String previousBlockHash) {
    this.previousBlockHash = previousBlockHash;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Block block = (Block) o;
    return Objects.equals(this.blockId, block.blockId) &&
        Objects.equals(this.version, block.version) &&
        Objects.equals(this.transactions, block.transactions) &&
        Objects.equals(this.timestamp, block.timestamp) &&
        Objects.equals(this.transactionsHash, block.transactionsHash) &&
        Objects.equals(this.stateHash, block.stateHash) &&
        Objects.equals(this.previousBlockHash, block.previousBlockHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockId, version, transactions, timestamp, transactionsHash, stateHash, previousBlockHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Block {\n");
    
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    transactionsHash: ").append(toIndentedString(transactionsHash)).append("\n");
    sb.append("    stateHash: ").append(toIndentedString(stateHash)).append("\n");
    sb.append("    previousBlockHash: ").append(toIndentedString(previousBlockHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

