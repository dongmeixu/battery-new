/*
 * 区块链服务API
 * 区块链服务
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package models;

import models.api.Jsonable;
import play.data.validation.Required;
import play.modules.jongo.BaseModel;

import java.sql.Timestamp;
import java.util.Objects;

/**
 * Scan
 */
public class Scan extends BaseModel implements Jsonable {
  @Required
  private String id = null;

  @Required
  private String scannerId = null;

  @Required
  private String barcode = null;

  @Required
  private Double longitude = null;

  @Required
  private Double latitude = null;

  @Required
  private Timestamp timestamp = null;

  public Scan id(String id) {
    this.id = id;
    return this;
  }

/*   *//**
   * id
   * @return id
  **//*

  public String getId() {
    return id;
  }*/

  public void setId(String id) {
    this.id = id;
  }

  public Scan scannerId(String scannerId) {
    this.scannerId = scannerId;
    return this;
  }

   /**
   * 扫描者ID
   * @return scannerId
  **/

  public String getScannerId() {
    return scannerId;
  }

  public void setScannerId(String scannerId) {
    this.scannerId = scannerId;
  }

  public Scan barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

   /**
   * 二维码内容
   * @return barcode
  **/

  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }

  public Scan longitude(Double longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * 扫描者所在位置的经度
   * @return longitude
  **/

  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }

  public Scan latitude(Double latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * 扫描者所在位置的纬度
   * @return latitude
  **/

  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }

  public Scan timestamp(Timestamp timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/

  public Timestamp getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Timestamp timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scan scan = (Scan) o;
    return Objects.equals(this.id, scan.id) &&
        Objects.equals(this.scannerId, scan.scannerId) &&
        Objects.equals(this.barcode, scan.barcode) &&
        Objects.equals(this.longitude, scan.longitude) &&
        Objects.equals(this.latitude, scan.latitude) &&
        Objects.equals(this.timestamp, scan.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, scannerId, barcode, longitude, latitude, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scan {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scannerId: ").append(toIndentedString(scannerId)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

